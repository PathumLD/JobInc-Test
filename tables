-- AI-Native Talent Platform Database Schema
-- Complete schema with MIS job posting by company reference

-- 1. Base Users Table (Common Fields)
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    profile_image_url TEXT,
    user_type ENUM('candidate', 'employer', 'admin', 'mis', 'recruitment_agency') NOT NULL,
    status ENUM('active', 'inactive', 'suspended', 'pending_verification') DEFAULT 'pending_verification',
    email_verified BOOLEAN DEFAULT FALSE,
    email_verification_token VARCHAR(255),
    password_reset_token VARCHAR(255),
    password_reset_expires_at TIMESTAMP,
    last_login_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL
);

CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_type ON users(user_type);
CREATE INDEX idx_users_status ON users(status);


-- 2. Companies Schema
CREATE TABLE companies (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(200) NOT NULL,
    slug VARCHAR(200) UNIQUE NOT NULL,
    description TEXT,
    website_url TEXT,
    logo_url TEXT,
    industry VARCHAR(100),
    company_size ENUM('startup', '1-10', '11-50', '51-200', '201-500', '501-1000', '1000+') NOT NULL,
    headquarters_location VARCHAR(200),
    founded_year INTEGER,
    company_type ENUM('startup', 'corporation', 'agency', 'non_profit', 'government') DEFAULT 'corporation',
    remote_friendly BOOLEAN DEFAULT FALSE,
    benefits TEXT,
    culture_description TEXT,
    social_media_links JSON,
    verification_status ENUM('pending', 'verified', 'rejected') DEFAULT 'pending',
    verified_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE INDEX idx_companies_slug ON companies(slug);
CREATE INDEX idx_companies_industry ON companies(industry);
CREATE INDEX idx_companies_size ON companies(company_size);
CREATE INDEX idx_companies_verification ON companies(verification_status);


-- 3. Candidate Profile Table (Extends Users)
CREATE TABLE candidates (
    user_id UUID PRIMARY KEY,
    title VARCHAR(200),
    bio TEXT,
    location VARCHAR(200),
    remote_preference ENUM('remote_only', 'hybrid', 'onsite', 'flexible') DEFAULT 'flexible',
    experience_level ENUM('entry', 'junior', 'mid', 'senior', 'lead', 'principal') NOT NULL,
    years_of_experience INTEGER,
    expected_salary_min DECIMAL(10,2),
    expected_salary_max DECIMAL(10,2),
    currency VARCHAR(3) DEFAULT 'USD',
    availability_status ENUM('available', 'open_to_opportunities', 'not_looking') DEFAULT 'available',
    availability_date DATE,
    resume_url TEXT,
    portfolio_url TEXT,
    github_url TEXT,
    linkedin_url TEXT,
    personal_website TEXT,
    ai_collaboration_score DECIMAL(5,2) DEFAULT 0.00,
    prompting_skill_score DECIMAL(5,2) DEFAULT 0.00,
    workflow_automation_score DECIMAL(5,2) DEFAULT 0.00,
    overall_ai_readiness_score DECIMAL(5,2) DEFAULT 0.00,
    interview_ready BOOLEAN DEFAULT FALSE,
    pre_qualified BOOLEAN DEFAULT FALSE,
    profile_completion_percentage INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_candidates_experience_level ON candidates(experience_level);
CREATE INDEX idx_candidates_availability ON candidates(availability_status);
CREATE INDEX idx_candidates_ai_scores ON candidates(overall_ai_readiness_score);


-- 4. Employer Profile Table (Extends Users)
CREATE TABLE employers (
    user_id UUID PRIMARY KEY,
    company_id UUID NOT NULL,
    job_title VARCHAR(200),
    department VARCHAR(100),
    role ENUM('recruiter', 'hiring_manager', 'hr_admin', 'company_admin') NOT NULL,
    permissions JSON,
    is_primary_contact BOOLEAN DEFAULT FALSE,
    phone_extension VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

CREATE INDEX idx_employers_company_id ON employers(company_id);
CREATE INDEX idx_employers_role ON employers(role);


-- 5. MIS User Profile Table (Extends Users with Enhanced Job Posting Capabilities)
CREATE TABLE mis_users (
    user_id UUID PRIMARY KEY,
    access_level ENUM('read_only', 'analyst', 'admin', 'super_admin') NOT NULL,
    department VARCHAR(100),
    reporting_to UUID,
    data_access_scopes JSON,
    job_posting_permissions BOOLEAN DEFAULT FALSE,
    can_post_for_all_companies BOOLEAN DEFAULT FALSE,
    max_active_jobs INTEGER DEFAULT 5,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (reporting_to) REFERENCES mis_users(user_id) ON DELETE SET NULL
);

CREATE INDEX idx_mis_users_access_level ON mis_users(access_level);
CREATE INDEX idx_mis_users_job_posting ON mis_users(job_posting_permissions);


-- 6. MIS Company Access Table (Controls which companies MIS users can post for)
CREATE TABLE mis_company_access (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    mis_user_id UUID NOT NULL,
    company_id UUID NOT NULL,
    can_create_jobs BOOLEAN DEFAULT TRUE,
    can_manage_jobs BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (mis_user_id) REFERENCES mis_users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE,
    UNIQUE KEY unique_mis_company_access (mis_user_id, company_id)
);

CREATE INDEX idx_mis_company_access_user ON mis_company_access(mis_user_id);
CREATE INDEX idx_mis_company_access_company ON mis_company_access(company_id);


-- 7. Recruitment Agency Profile Table (Extends Users)
CREATE TABLE recruitment_agencies (
    user_id UUID PRIMARY KEY,
    agency_id UUID NOT NULL,
    role ENUM('recruiter', 'account_manager', 'agency_admin') NOT NULL,
    specialization VARCHAR(200),
    clients JSON,
    commission_rate DECIMAL(5,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (agency_id) REFERENCES companies(id) ON DELETE CASCADE
);

CREATE INDEX idx_recruitment_agencies_agency_id ON recruitment_agencies(agency_id);
CREATE INDEX idx_recruitment_agencies_role ON recruitment_agencies(role);


-- 8. Skills Schema
CREATE TABLE skills (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) UNIQUE NOT NULL,
    category ENUM('programming_language', 'framework', 'database', 'cloud', 'devops', 'ai_ml', 'soft_skill', 'tool', 'methodology') NOT NULL,
    description TEXT,
    ai_relevant BOOLEAN DEFAULT FALSE,
    popularity_score INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE INDEX idx_skills_category ON skills(category);
CREATE INDEX idx_skills_ai_relevant ON skills(ai_relevant);
CREATE INDEX idx_skills_popularity ON skills(popularity_score);


-- 9. Candidate Skills Schema
CREATE TABLE candidate_skills (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    candidate_id UUID NOT NULL,
    skill_id UUID NOT NULL,
    proficiency_level ENUM('beginner', 'intermediate', 'advanced', 'expert') NOT NULL,
    years_of_experience DECIMAL(3,1),
    is_primary BOOLEAN DEFAULT FALSE,
    verified BOOLEAN DEFAULT FALSE,
    self_assessed BOOLEAN DEFAULT TRUE,
    ai_assessed_score DECIMAL(5,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (candidate_id) REFERENCES candidates(user_id) ON DELETE CASCADE,
    FOREIGN KEY (skill_id) REFERENCES skills(id) ON DELETE CASCADE,
    UNIQUE KEY unique_candidate_skill (candidate_id, skill_id)
);

CREATE INDEX idx_candidate_skills_candidate ON candidate_skills(candidate_id);
CREATE INDEX idx_candidate_skills_skill ON candidate_skills(skill_id);
CREATE INDEX idx_candidate_skills_proficiency ON candidate_skills(proficiency_level);


-- 10. Jobs Schema (Enhanced for MIS Posting)
CREATE TABLE jobs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    company_id UUID NOT NULL,
    creator_id UUID NOT NULL,
    creator_type ENUM('employer', 'mis_user') NOT NULL,
    title VARCHAR(200) NOT NULL,
    slug VARCHAR(250) UNIQUE NOT NULL,
    description TEXT NOT NULL,
    requirements TEXT,
    responsibilities TEXT,
    benefits TEXT,
    job_type ENUM('full_time', 'part_time', 'contract', 'internship', 'freelance') NOT NULL,
    experience_level ENUM('entry', 'junior', 'mid', 'senior', 'lead', 'principal') NOT NULL,
    location VARCHAR(200),
    remote_type ENUM('remote', 'hybrid', 'onsite') NOT NULL,
    salary_min DECIMAL(10,2),
    salary_max DECIMAL(10,2),
    currency VARCHAR(3) DEFAULT 'USD',
    salary_type ENUM('annual', 'monthly', 'weekly', 'daily', 'hourly') DEFAULT 'annual',
    equity_offered BOOLEAN DEFAULT FALSE,
    ai_skills_required BOOLEAN DEFAULT FALSE,
    ai_collaboration_weight DECIMAL(3,2) DEFAULT 0.00,
    prompting_skills_weight DECIMAL(3,2) DEFAULT 0.00,
    automation_skills_weight DECIMAL(3,2) DEFAULT 0.00,
    application_deadline DATE,
    status ENUM('draft', 'published', 'paused', 'closed', 'archived') DEFAULT 'draft',
    published_at TIMESTAMP NULL,
    priority_level INTEGER DEFAULT 1,
    views_count INTEGER DEFAULT 0,
    applications_count INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE,
    CONSTRAINT chk_creator CHECK (
        (creator_type = 'employer' AND creator_id IN (SELECT user_id FROM employers)) OR
        (creator_type = 'mis_user' AND creator_id IN (SELECT user_id FROM mis_users))
);

CREATE INDEX idx_jobs_company ON jobs(company_id);
CREATE INDEX idx_jobs_creator ON jobs(creator_id, creator_type);
CREATE INDEX idx_jobs_status ON jobs(status);
CREATE INDEX idx_jobs_experience_level ON jobs(experience_level);
CREATE INDEX idx_jobs_remote_type ON jobs(remote_type);
CREATE INDEX idx_jobs_published ON jobs(published_at);


-- 11. Job Skills Schema
CREATE TABLE job_skills (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    job_id UUID NOT NULL,
    skill_id UUID NOT NULL,
    required_level ENUM('nice_to_have', 'preferred', 'required', 'must_have') NOT NULL,
    proficiency_level ENUM('beginner', 'intermediate', 'advanced', 'expert') NOT NULL,
    years_required DECIMAL(3,1),
    weight DECIMAL(3,2) DEFAULT 1.00,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (job_id) REFERENCES jobs(id) ON DELETE CASCADE,
    FOREIGN KEY (skill_id) REFERENCES skills(id) ON DELETE CASCADE,
    UNIQUE KEY unique_job_skill (job_id, skill_id)
);

CREATE INDEX idx_job_skills_job ON job_skills(job_id);
CREATE INDEX idx_job_skills_skill ON job_skills(skill_id);
CREATE INDEX idx_job_skills_required_level ON job_skills(required_level);


-- 12. Applications Schema
CREATE TABLE applications (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    job_id UUID NOT NULL,
    candidate_id UUID NOT NULL,
    status ENUM('pending', 'screening', 'ai_assessment', 'interview', 'technical_test', 'final_review', 'offered', 'accepted', 'rejected', 'withdrawn') DEFAULT 'pending',
    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    cover_letter TEXT,
    ai_match_score DECIMAL(5,2),
    skill_match_percentage DECIMAL(5,2),
    experience_match_score DECIMAL(5,2),
    ai_readiness_match DECIMAL(5,2),
    overall_fit_score DECIMAL(5,2),
    recruiter_notes TEXT,
    candidate_notes TEXT,
    interview_scheduled_at TIMESTAMP NULL,
    interview_completed_at TIMESTAMP NULL,
    offer_extended_at TIMESTAMP NULL,
    offer_accepted_at TIMESTAMP NULL,
    rejection_reason TEXT,
    rejected_at TIMESTAMP NULL,
    withdrawn_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (job_id) REFERENCES jobs(id) ON DELETE CASCADE,
    FOREIGN KEY (candidate_id) REFERENCES candidates(user_id) ON DELETE CASCADE,
    UNIQUE KEY unique_job_candidate (job_id, candidate_id)
);

CREATE INDEX idx_applications_job ON applications(job_id);
CREATE INDEX idx_applications_candidate ON applications(candidate_id);
CREATE INDEX idx_applications_status ON applications(status);
CREATE INDEX idx_applications_score ON applications(overall_fit_score);
CREATE INDEX idx_applications_applied ON applications(applied_at);


-- 13. AI Assessments Schema
CREATE TABLE ai_assessments (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    candidate_id UUID NOT NULL,
    assessment_type ENUM('ai_collaboration', 'prompting_skills', 'workflow_automation', 'coding_with_ai', 'comprehensive') NOT NULL,
    status ENUM('scheduled', 'in_progress', 'completed', 'expired', 'cancelled') DEFAULT 'scheduled',
    score DECIMAL(5,2),
    max_score DECIMAL(5,2) DEFAULT 100.00,
    time_taken_minutes INTEGER,
    ai_engine_used VARCHAR(50),
    assessment_data JSON,
    feedback TEXT,
    recommendations TEXT,
    strengths JSON,
    improvement_areas JSON,
    started_at TIMESTAMP NULL,
    completed_at TIMESTAMP NULL,
    expires_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (candidate_id) REFERENCES candidates(user_id) ON DELETE CASCADE
);

CREATE INDEX idx_ai_assessments_candidate ON ai_assessments(candidate_id);
CREATE INDEX idx_ai_assessments_type ON ai_assessments(assessment_type);
CREATE INDEX idx_ai_assessments_status ON ai_assessments(status);
CREATE INDEX idx_ai_assessments_score ON ai_assessments(score);


-- 14. Interviews Schema
CREATE TABLE interviews (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    application_id UUID NOT NULL,
    interviewer_id UUID,
    interview_type ENUM('phone_screening', 'video_call', 'ai_video', 'technical', 'behavioral', 'final') NOT NULL,
    status ENUM('scheduled', 'in_progress', 'completed', 'cancelled', 'no_show') DEFAULT 'scheduled',
    scheduled_at TIMESTAMP NOT NULL,
    duration_minutes INTEGER DEFAULT 60,
    meeting_link TEXT,
    meeting_id VARCHAR(100),
    ai_conducted BOOLEAN DEFAULT FALSE,
    ai_analysis JSON,
    interview_notes TEXT,
    technical_assessment_data JSON,
    behavioral_scores JSON,
    communication_score DECIMAL(3,2),
    technical_score DECIMAL(3,2),
    cultural_fit_score DECIMAL(3,2),
    overall_rating DECIMAL(3,2),
    recommendation ENUM('strong_hire', 'hire', 'maybe', 'no_hire', 'strong_no_hire'),
    feedback_for_candidate TEXT,
    recording_url TEXT,
    transcript TEXT,
    started_at TIMESTAMP NULL,
    completed_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (application_id) REFERENCES applications(id) ON DELETE CASCADE,
    FOREIGN KEY (interviewer_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE INDEX idx_interviews_application ON interviews(application_id);
CREATE INDEX idx_interviews_interviewer ON interviews(interviewer_id);
CREATE INDEX idx_interviews_status ON interviews(status);
CREATE INDEX idx_interviews_scheduled ON interviews(scheduled_at);
CREATE INDEX idx_interviews_type ON interviews(interview_type);


-- 15. Notifications Schema
CREATE TABLE notifications (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    type ENUM('application_update', 'interview_scheduled', 'assessment_invitation', 'job_match', 'message', 'system') NOT NULL,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    data JSON,
    read_at TIMESTAMP NULL,
    action_url TEXT,
    priority ENUM('low', 'medium', 'high', 'urgent') DEFAULT 'medium',
    expires_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_notifications_user ON notifications(user_id);
CREATE INDEX idx_notifications_type ON notifications(type);
CREATE INDEX idx_notifications_read ON notifications(read_at);
CREATE INDEX idx_notifications_created ON notifications(created_at);


-- 16. Messages Schema
CREATE TABLE messages (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    conversation_id UUID NOT NULL,
    sender_id UUID NOT NULL,
    recipient_id UUID NOT NULL,
    message_type ENUM('text', 'file', 'system', 'ai_generated') DEFAULT 'text',
    content TEXT NOT NULL,
    attachments JSON,
    read_at TIMESTAMP NULL,
    edited_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (recipient_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_messages_conversation ON messages(conversation_id);
CREATE INDEX idx_messages_sender ON messages(sender_id);
CREATE INDEX idx_messages_recipient ON messages(recipient_id);
CREATE INDEX idx_messages_created ON messages(created_at);


-- 17. Conversations Schema
CREATE TABLE conversations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    application_id UUID,
    participant_1_id UUID NOT NULL,
    participant_2_id UUID NOT NULL,
    last_message_at TIMESTAMP,
    last_message_preview TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (application_id) REFERENCES applications(id) ON DELETE SET NULL,
    FOREIGN KEY (participant_1_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (participant_2_id) REFERENCES users(id) ON DELETE CASCADE,
    UNIQUE KEY unique_participants (participant_1_id, participant_2_id, application_id)
);

CREATE INDEX idx_conversations_participants ON conversations(participant_1_id, participant_2_id);
CREATE INDEX idx_conversations_application ON conversations(application_id);
CREATE INDEX idx_conversations_updated ON conversations(updated_at);


-- 18. AI Analytics Schema
CREATE TABLE ai_analytics (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    entity_type ENUM('candidate', 'job', 'application', 'interview') NOT NULL,
    entity_id UUID NOT NULL,
    metric_name VARCHAR(100) NOT NULL,
    metric_value DECIMAL(10,4),
    metric_data JSON,
    calculation_date DATE NOT NULL,
    ai_model_version VARCHAR(50),
    confidence_score DECIMAL(3,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_ai_analytics_entity ON ai_analytics(entity_type, entity_id);
CREATE INDEX idx_ai_analytics_metric ON ai_analytics(metric_name);
CREATE INDEX idx_ai_analytics_date ON ai_analytics(calculation_date);


-- 19. Saved Jobs Schema
CREATE TABLE saved_jobs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    candidate_id UUID NOT NULL,
    job_id UUID NOT NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (candidate_id) REFERENCES candidates(user_id) ON DELETE CASCADE,
    FOREIGN KEY (job_id) REFERENCES jobs(id) ON DELETE CASCADE,
    UNIQUE KEY unique_saved_job (candidate_id, job_id)
);

CREATE INDEX idx_saved_jobs_candidate ON saved_jobs(candidate_id);
CREATE INDEX idx_saved_jobs_job ON saved_jobs(job_id);


-- 20. Job Views Schema
CREATE TABLE job_views (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    job_id UUID NOT NULL,
    user_id UUID,
    ip_address VARCHAR(45),
    user_agent TEXT,
    referrer_url TEXT,
    viewed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (job_id) REFERENCES jobs(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE INDEX idx_job_views_job ON job_views(job_id);
CREATE INDEX idx_job_views_user ON job_views(user_id);
CREATE INDEX idx_job_views_date ON job_views(viewed_at);


-- 21. Subscription Plans Schema
CREATE TABLE subscription_plans (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL,
    description TEXT,
    plan_type ENUM('free', 'basic', 'premium', 'enterprise') NOT NULL,
    user_type ENUM('candidate', 'employer', 'agency') NOT NULL,
    price_monthly DECIMAL(8,2),
    price_yearly DECIMAL(8,2),
    features JSON NOT NULL,
    limits JSON,
    active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE INDEX idx_subscription_plans_type ON subscription_plans(plan_type, user_type);
CREATE INDEX idx_subscription_plans_active ON subscription_plans(active);


-- 22. User Subscriptions Schema
CREATE TABLE user_subscriptions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    plan_id UUID NOT NULL,
    status ENUM('active', 'cancelled', 'expired', 'suspended') DEFAULT 'active',
    started_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    cancelled_at TIMESTAMP NULL,
    stripe_subscription_id VARCHAR(255),
    stripe_customer_id VARCHAR(255),
    billing_cycle ENUM('monthly', 'yearly') DEFAULT 'monthly',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (plan_id) REFERENCES subscription_plans(id) ON DELETE RESTRICT
);

CREATE INDEX idx_user_subscriptions_user ON user_subscriptions(user_id);
CREATE INDEX idx_user_subscriptions_plan ON user_subscriptions(plan_id);
CREATE INDEX idx_user_subscriptions_status ON user_subscriptions(status);


-- 23. System Settings Schema
CREATE TABLE system_settings (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    setting_key VARCHAR(100) UNIQUE NOT NULL,
    setting_value TEXT,
    setting_type ENUM('string', 'number', 'boolean', 'json') DEFAULT 'string',
    description TEXT,
    category VARCHAR(50),
    is_public BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE INDEX idx_system_settings_key ON system_settings(setting_key);
CREATE INDEX idx_system_settings_category ON system_settings(category);


-- Additional Performance Indexes
CREATE INDEX idx_candidates_experience_location ON candidates(experience_level, location);
CREATE INDEX idx_jobs_status_published ON jobs(status, published_at);
CREATE INDEX idx_applications_status_score